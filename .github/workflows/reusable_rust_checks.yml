on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        default: ubuntu-latest
        description: "GHA runner for the job (ubuntu-latest, ubuntu-latest-4c, ubuntu-latest-8c)"
      timeout-minutes:
        type: number
        default: 10
        description: "Job timeout in minutes"

jobs:
  semgrep:
    name: 'semgrep scan'
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: semgrep scan
        run: "semgrep scan --config auto --error"

  fmt:
    name: fmt
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      # Verify formatting without rewriting files
      - name: "Check formatting"
        run: cargo fmt -- --check

  lint:
    name: lint
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    env:
      # Fail the build on every warning, including Clippy lints
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Run
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  unit_test:
    name: 'unit test'
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        toolchain: [ stable, nightly ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo test
        run: "cargo test --workspace --all-targets --all-features --verbose"
